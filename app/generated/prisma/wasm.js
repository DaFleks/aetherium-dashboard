
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  hashedPassword: 'hashedPassword',
  firstName: 'firstName',
  lastName: 'lastName',
  role: 'role',
  permissions: 'permissions',
  isActive: 'isActive',
  lastLogin: 'lastLogin',
  createdBy: 'createdBy',
  emailVerified: 'emailVerified',
  avatarUrl: 'avatarUrl'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  email: 'email',
  hashedPassword: 'hashedPassword',
  firstName: 'firstName',
  lastName: 'lastName',
  businessName: 'businessName',
  isActive: 'isActive',
  emailVerified: 'emailVerified',
  lastLogin: 'lastLogin',
  role: 'role',
  userId: 'userId',
  cartId: 'cartId'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  street: 'street',
  city: 'city',
  province: 'province',
  postalCode: 'postalCode',
  country: 'country',
  phoneNumber: 'phoneNumber',
  isDefault: 'isDefault',
  userId: 'userId',
  customerId: 'customerId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  sku: 'sku',
  stock: 'stock',
  status: 'status',
  categoryId: 'categoryId',
  brandId: 'brandId',
  price: 'price',
  discountPrice: 'discountPrice',
  discountPercentage: 'discountPercentage',
  viewCount: 'viewCount',
  reviewCount: 'reviewCount',
  wishlistCount: 'wishlistCount',
  cartCount: 'cartCount',
  soldCount: 'soldCount',
  returnCount: 'returnCount',
  averageRating: 'averageRating'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  parentId: 'parentId'
};

exports.Prisma.BrandScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  src: 'src',
  altText: 'altText',
  productId: 'productId'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  sku: 'sku',
  price: 'price',
  stock: 'stock',
  productId: 'productId'
};

exports.Prisma.ProductPriceHistoryScalarFieldEnum = {
  id: 'id',
  oldPrice: 'oldPrice',
  newPrice: 'newPrice',
  userId: 'userId',
  productId: 'productId',
  productVariantId: 'productVariantId'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR',
  GUEST: 'GUEST'
};

exports.CustomerRole = exports.$Enums.CustomerRole = {
  CUSTOMER: 'CUSTOMER',
  SUSPENDED: 'SUSPENDED',
  PREMIUM: 'PREMIUM'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  ARCHIVED: 'ARCHIVED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Customer: 'Customer',
  Address: 'Address',
  Product: 'Product',
  Category: 'Category',
  Brand: 'Brand',
  ProductImage: 'ProductImage',
  ProductVariant: 'ProductVariant',
  ProductPriceHistory: 'ProductPriceHistory',
  Cart: 'Cart',
  CartItem: 'CartItem'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Alex\\Desktop\\aetherium-dashboard\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Alex\\Desktop\\aetherium-dashboard\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  ADMIN\n  MODERATOR\n  GUEST\n}\n\nenum CustomerRole {\n  CUSTOMER\n  SUSPENDED\n  PREMIUM\n}\n\nenum ProductStatus {\n  ACTIVE\n  INACTIVE\n  ARCHIVED\n}\n\nmodel User {\n  id             String   @id @default(cuid())\n  email          String   @unique\n  hashedPassword String\n  firstName      String\n  lastName       String\n  role           UserRole @default(GUEST)\n  permissions    String?\n  isActive       Boolean? @default(false)\n  address        Address?\n  lastLogin      DateTime @default(now())\n  createdBy      String   @default(\"Admin\")\n  emailVerified  Boolean? @default(false)\n  avatarUrl      String?\n\n  //  Relationships\n  customer Customer? // optional one-to-one\n}\n\nmodel Customer {\n  id             String       @id @default(cuid())\n  email          String       @unique\n  hashedPassword String\n  firstName      String\n  lastName       String\n  businessName   String?\n  isActive       Boolean?     @default(false)\n  addresses      Address[]\n  emailVerified  Boolean?     @default(false)\n  lastLogin      DateTime     @default(now())\n  role           CustomerRole @default(CUSTOMER)\n\n  //  Relationships\n  userId String? @unique\n  user   User?   @relation(fields: [userId], references: [id])\n  cartId String?\n  cart   Cart?\n}\n\nmodel Address {\n  id          String  @id @default(cuid())\n  street      String\n  city        String\n  province    String\n  postalCode  String\n  country     String\n  phoneNumber String\n  isDefault   Boolean @default(false)\n\n  //  Relations\n  user       User?     @relation(fields: [userId], references: [id])\n  userId     String?   @unique\n  Customer   Customer? @relation(fields: [customerId], references: [id])\n  customerId String?\n}\n\nmodel Product {\n  id          String        @id @default(cuid())\n  name        String\n  description String?\n  sku         String        @unique\n  stock       Int           @default(0)\n  status      ProductStatus @default(INACTIVE)\n\n  //  Relations\n  category   Category? @relation(fields: [categoryId], references: [id])\n  categoryId String\n\n  brand   Brand? @relation(fields: [brandId], references: [id])\n  brandId String\n\n  images ProductImage[]\n\n  variants ProductVariant[]\n\n  //  Pricing\n  price              Float @default(0.0)\n  discountPrice      Float @default(0.0)\n  discountPercentage Float @default(0.0)\n\n  //  Metrics\n  viewCount     Int                   @default(0)\n  reviewCount   Float                 @default(0.0)\n  wishlistCount Int                   @default(0)\n  cartCount     Int                   @default(0)\n  soldCount     Int                   @default(0)\n  returnCount   Int                   @default(0)\n  averageRating Float                 @default(0)\n  priceHistory  ProductPriceHistory[]\n  CartItem      CartItem[]\n}\n\nmodel Category {\n  id       String     @id @default(cuid())\n  name     String\n  parent   Category?  @relation(\"Subcategories\", fields: [parentId], references: [id])\n  parentId String\n  children Category[] @relation(\"Subcategories\")\n\n  products Product[]\n}\n\nmodel Brand {\n  id   String @id @default(cuid())\n  name String\n\n  products Product[]\n}\n\nmodel ProductImage {\n  id      String  @id @default(cuid())\n  src     String\n  altText String?\n\n  product   Product @relation(fields: [productId], references: [id])\n  productId String\n}\n\nmodel ProductVariant {\n  id    String @id @default(cuid())\n  name  String\n  sku   String @unique\n  price Float  @default(0)\n  stock Int    @default(0)\n\n  product   Product @relation(fields: [productId], references: [id])\n  productId String\n\n  priceHistory ProductPriceHistory[]\n}\n\nmodel ProductPriceHistory {\n  id               String          @id @default(cuid())\n  oldPrice         Float\n  newPrice         Float\n  userId           String // User who made the change, no need for anything else\n  product          Product         @relation(fields: [productId], references: [id])\n  productId        String\n  ProductVariant   ProductVariant? @relation(fields: [productVariantId], references: [id])\n  productVariantId String?\n}\n\nmodel Cart {\n  id         String     @id @default(cuid())\n  customer   Customer   @relation(fields: [customerId], references: [id])\n  customerId String     @unique\n  items      CartItem[]\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime   @updatedAt\n}\n\nmodel CartItem {\n  id        Int     @id @default(autoincrement())\n  cart      Cart    @relation(fields: [cartId], references: [id])\n  cartId    String\n  product   Product @relation(fields: [productId], references: [id])\n  productId String\n  quantity  Int     @default(1)\n}\n",
  "inlineSchemaHash": "b3c997b9e3a2d5a66afd08cd76cbc3923d1a7b935445a6629a991c64e918c7e1",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUser\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToUser\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToCustomer\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"CustomerRole\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerToUser\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCustomer\"}],\"dbName\":null},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AddressToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"AddressToCustomer\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"object\",\"type\":\"Brand\",\"relationName\":\"BrandToProduct\"},{\"name\":\"brandId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"ProductImage\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountPercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reviewCount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"wishlistCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cartCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"soldCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"returnCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averageRating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"priceHistory\",\"kind\":\"object\",\"type\":\"ProductPriceHistory\",\"relationName\":\"ProductToProductPriceHistory\"},{\"name\":\"CartItem\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"Subcategories\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"Subcategories\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":null},\"Brand\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"BrandToProduct\"}],\"dbName\":null},\"ProductImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"src\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ProductVariant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceHistory\",\"kind\":\"object\",\"type\":\"ProductPriceHistory\",\"relationName\":\"ProductPriceHistoryToProductVariant\"}],\"dbName\":null},\"ProductPriceHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"newPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductPriceHistory\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ProductVariant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductPriceHistoryToProductVariant\"},{\"name\":\"productVariantId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CartToCustomer\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

